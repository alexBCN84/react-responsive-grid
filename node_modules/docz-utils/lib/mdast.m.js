import vfile from"to-vfile";import unified from"unified";import remark from"remark-parse";import matter from"remark-frontmatter";import slug from"remark-slug";import parseFrontmatter from"remark-parse-yaml";import find from"unist-util-find";import is from"unist-util-is";import visit from"unist-util-visit";import humanize from"humanize-string";import flatten from"lodash.flatten";import get from"lodash.get";const parseMdx=r=>{const e=vfile.readSync(r,"utf-8"),t=unified().use(remark,{type:"yaml",marker:"-"}).use(matter).use(parseFrontmatter).use(slug);return t.run(t.parse(e))},getChildValue=r=>r.map(r=>r.children?getChildValue(r.children):r.value),valueFromHeading=r=>{const e=get(r,"children"),t=get(r,"data.id");return Array.isArray(e)?flatten(getChildValue(e)).filter(Boolean).join(" "):humanize(t)},headingsFromAst=r=>{const e=[];return visit(r,"heading",r=>{const t=get(r,"data.id"),a=get(r,"depth");e.push({depth:a,slug:t,value:valueFromHeading(r)})}),e},getParsedData=r=>{const e=find(r,r=>is("yaml",r));return get(e,"data.parsedValue")||{}};export{parseMdx,headingsFromAst,getParsedData};
