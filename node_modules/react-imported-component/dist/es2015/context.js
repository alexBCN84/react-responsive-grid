import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React from 'react';
import PropTypes from 'prop-types';
var context = React.createContext ? React.createContext() : null;
var UID = 1;
export var ImportedStream =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(ImportedStream, _React$Component);

  function ImportedStream(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.UID = UID++;

    if (!_this.props.takeUID) {
      throw new Error('You have to provide takeUID prop to ImportedStream');
    }

    _this.props.takeUID(_this.UID);

    return _this;
  }

  var _proto = ImportedStream.prototype;

  _proto.render = function render() {
    return React.createElement(context.Provider, {
      value: this.UID
    }, this.props.children);
  };

  return ImportedStream;
}(React.Component);
ImportedStream.propTypes = process.env.NODE_ENV !== "production" ? {
  takeUID: PropTypes.func.isRequired,
  children: PropTypes.node
} : {};

var PassThrough = function PassThrough(_ref) {
  var children = _ref.children;
  return children(0);
};

PassThrough.propTypes = {
  children: PropTypes.func.isRequired
};
export var UIDConsumer = context ? context.Consumer : PassThrough;