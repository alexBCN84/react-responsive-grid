"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.printDrainHydrateMarks = exports.rehydrateMarks = exports.drainHydrateMarks = exports.loadMark = exports.useMark = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var LOADABLE_MARKS = {};
var USED_MARKS = {};

var useMark = function useMark(stream, marks) {
  if (marks && marks.length) {
    if (!USED_MARKS[stream]) {
      USED_MARKS[stream] = {};
    }

    marks.forEach(function (a) {
      return USED_MARKS[stream][a] = true;
    });
  }
};

exports.useMark = useMark;

var loadMark = function loadMark(markId, loadable) {
  if (!LOADABLE_MARKS[markId]) {
    LOADABLE_MARKS[markId] = [];
  }

  LOADABLE_MARKS[markId].push(loadable);
};

exports.loadMark = loadMark;

var drainHydrateMarks = function drainHydrateMarks() {
  var stream = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var used = Object.keys(USED_MARKS[stream] || {});
  delete USED_MARKS[stream];
  return used;
};

exports.drainHydrateMarks = drainHydrateMarks;

var rehydrateMarks = function rehydrateMarks() {
  var marks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  var rehydrate = marks || global.___REACT_DEFERRED_COMPONENT_MARKS || [];
  return Promise.all(rehydrate.map(function (mark) {
    return LOADABLE_MARKS[mark];
  }).reduce(function (acc, loadable) {
    return [].concat((0, _toConsumableArray2.default)(acc), (0, _toConsumableArray2.default)(loadable));
  }, []).filter(function (it) {
    return !!it;
  }).map(function (loadable) {
    return loadable.load();
  }));
};

exports.rehydrateMarks = rehydrateMarks;

var printDrainHydrateMarks = function printDrainHydrateMarks() {
  var stream = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  return "<script>window.___REACT_DEFERRED_COMPONENT_MARKS=".concat(JSON.stringify(drainHydrateMarks(stream)), ";/*stream ").concat(stream, "*/</script>");
};

exports.printDrainHydrateMarks = printDrainHydrateMarks;