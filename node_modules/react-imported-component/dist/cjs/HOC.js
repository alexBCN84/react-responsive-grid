"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.lazy = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _Component = _interopRequireDefault(require("./Component"));

var _loadable = _interopRequireDefault(require("./loadable"));

/**
 *
 * @param {Function} loaderFunction - () => import('a'), or () => require('b')
 * @param {Object} [options]
 * @param {React.Component} [options.LoadingComponent]
 * @param {React.Component} [options.ErrorComponent]
 * @param {Function} [options.exportPicker] - default behaviour - picks default export
 * @param {Function} [options.onError] - error handler. Will consume the real error.
 * @param {Function} [options.async] - enable React 16+ suspense.
 */
var loader = function loader(loaderFunction) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var loadable = (0, _loadable.default)(loaderFunction, !options.noAutoImport);
  /* eslint-disable react/display-name, react/prop-types */

  var ImportedComponent = function ImportedComponent(_ref) {
    var _ref$importedProps = _ref.importedProps,
        importedProps = _ref$importedProps === void 0 ? {} : _ref$importedProps,
        props = (0, _objectWithoutProperties2.default)(_ref, ["importedProps"]);
    return _react.default.createElement(_Component.default, (0, _extends2.default)({
      loadable: loadable,
      LoadingComponent: options.LoadingComponent,
      ErrorComponent: options.ErrorComponent,
      exportPicker: options.exportPicker,
      onError: options.onError,
      render: options.render,
      async: options.async,
      forwardProps: props || {}
    }, importedProps));
  };

  var Imported = _react.default.forwardRef ? _react.default.forwardRef(function (_ref2, ref) {
    var _ref2$importedProps = _ref2.importedProps,
        importedProps = _ref2$importedProps === void 0 ? {} : _ref2$importedProps,
        props = (0, _objectWithoutProperties2.default)(_ref2, ["importedProps"]);
    return _react.default.createElement(ImportedComponent, (0, _extends2.default)({}, props, {
      importedProps: (0, _objectSpread2.default)({}, importedProps, {
        forwardRef: ref
      })
    }));
  }) : ImportedComponent;
  /* eslint-enable */

  Imported.preload = function () {
    loadable.load().catch(function () {
      return {};
    });
    return loadable.resolution;
  };

  Imported.done = loadable.resolution;
  return Imported;
};

var lazy = function lazy(loaderFunction) {
  return loader(loaderFunction, {
    async: true
  });
};

exports.lazy = lazy;
var _default = loader;
exports.default = _default;