{"version":3,"file":"emotion-theming.umd.min.js","sources":["../../weak-memoize/src/index.js","../src/theme-provider.js","../../../node_modules/hoist-non-react-statics/index.js","../src/with-theme.js"],"sourcesContent":["// @flow\nlet weakMemoize = function<Arg, Return>(func: Arg => Return): Arg => Return {\n  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n  let cache: WeakMap<Arg, Return> = new WeakMap()\n  return arg => {\n    if (cache.has(arg)) {\n      // $FlowFixMe\n      return cache.get(arg)\n    }\n    let ret = func(arg)\n    cache.set(arg, ret)\n    return ret\n  }\n}\n\nexport default weakMemoize\n","// @flow\nimport * as React from 'react'\nimport { ThemeContext } from '@emotion/core'\nimport weakMemoize from '@emotion/weak-memoize'\n\nlet getTheme = (outerTheme: Object, theme: Object | (Object => Object)) => {\n  if (typeof theme === 'function') {\n    const mergedTheme = theme(outerTheme)\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      (mergedTheme == null ||\n        typeof mergedTheme !== 'object' ||\n        Array.isArray(mergedTheme))\n    ) {\n      throw new Error(\n        '[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!'\n      )\n    }\n    return mergedTheme\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    (theme == null || typeof theme !== 'object' || Array.isArray(theme))\n  ) {\n    throw new Error(\n      '[ThemeProvider] Please make your theme prop a plain object'\n    )\n  }\n\n  return { ...outerTheme, ...theme }\n}\n\nlet createCacheWithTheme = weakMemoize(outerTheme => {\n  return weakMemoize(theme => {\n    return getTheme(outerTheme, theme)\n  })\n})\n\ntype Props = {\n  theme: Object | (Object => Object),\n  children: React.Node\n}\n\nlet ThemeProvider = (props: Props) => {\n  return (\n    <ThemeContext.Consumer>\n      {theme => {\n        if (props.theme !== theme) {\n          theme = createCacheWithTheme(theme)(props.theme)\n        }\n        return (\n          <ThemeContext.Provider value={theme}>\n            {props.children}\n          </ThemeContext.Provider>\n        )\n      }}\n    </ThemeContext.Consumer>\n  )\n}\n\nexport default ThemeProvider\n","/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.hoistNonReactStatics = factory());\n}(this, (function () {\n    'use strict';\n    \n    var REACT_STATICS = {\n        childContextTypes: true,\n        contextTypes: true,\n        defaultProps: true,\n        displayName: true,\n        getDefaultProps: true,\n        getDerivedStateFromProps: true,\n        mixins: true,\n        propTypes: true,\n        type: true\n    };\n    \n    var KNOWN_STATICS = {\n        name: true,\n        length: true,\n        prototype: true,\n        caller: true,\n        callee: true,\n        arguments: true,\n        arity: true\n    };\n    \n    var defineProperty = Object.defineProperty;\n    var getOwnPropertyNames = Object.getOwnPropertyNames;\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var getPrototypeOf = Object.getPrototypeOf;\n    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n    \n    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n            \n            if (objectPrototype) {\n                var inheritedComponent = getPrototypeOf(sourceComponent);\n                if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n                }\n            }\n            \n            var keys = getOwnPropertyNames(sourceComponent);\n            \n            if (getOwnPropertySymbols) {\n                keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n            }\n            \n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                    try { // Avoid failures from read-only properties\n                        defineProperty(targetComponent, key, descriptor);\n                    } catch (e) {}\n                }\n            }\n            \n            return targetComponent;\n        }\n        \n        return targetComponent;\n    };\n})));\n","// @flow\nimport * as React from 'react'\nimport hoistNonReactStatics from 'hoist-non-react-statics'\nimport { ThemeContext } from '@emotion/core'\n\ntype Props = { theme: Object }\n\n// should we change this to be forwardRef/withCSSContext style so it doesn't merge with props?\n\nconst withTheme = (Component: React.ComponentType<Props>) => {\n  const componentName = Component.displayName || Component.name || 'Component'\n  let render = (props, ref) => {\n    return (\n      <ThemeContext.Consumer>\n        {theme => {\n          return <Component theme={theme} ref={ref} {...props} />\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n  // $FlowFixMe\n  let WithTheme = React.forwardRef(render)\n\n  WithTheme.displayName = `WithTheme(${componentName})`\n\n  return hoistNonReactStatics(WithTheme, Component)\n}\n\nexport default withTheme\n"],"names":["weakMemoize","func","cache","WeakMap","arg","has","get","ret","set","createCacheWithTheme","outerTheme","theme","REACT_STATICS","KNOWN_STATICS","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","childContextTypes","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromProps","mixins","propTypes","type","name","length","prototype","caller","callee","arguments","arity","Object","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","i","key","descriptor","e","props","React.createElement","ThemeContext","Consumer","Provider","value","children","Component","componentName","WithTheme","React","ref"],"mappings":"yeACA,IAAIA,EAAc,SAAsBC,OAElCC,EAA8B,IAAIC,eAC/B,SAAAC,MACDF,EAAMG,IAAID,UAELF,EAAMI,IAAIF,OAEfG,EAAMN,EAAKG,UACfF,EAAMM,IAAIJ,EAAKG,GACRA,ICqBPE,EAAuBT,EAAY,SAAAU,UAC9BV,EAAY,SAAAW,UA5BLD,EA6BIA,EA5BG,mBADaC,EA6BJA,GA3BRA,EAAMD,QAsBhBA,EAAeC,GAxBd,IAACD,EAAoBC,gICDnC,IAOOC,EAYAC,EAUAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAjC2DC,WAM3DR,EAAgB,CAChBS,mBAAmB,EACnBC,cAAc,EACdC,cAAc,EACdC,aAAa,EACbC,iBAAiB,EACjBC,0BAA0B,EAC1BC,QAAQ,EACRC,WAAW,EACXC,MAAM,GAGNhB,EAAgB,CAChBiB,MAAM,EACNC,QAAQ,EACRC,WAAW,EACXC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,OAAO,GAGPtB,EAAiBuB,OAAOvB,eACxBC,EAAsBsB,OAAOtB,oBAC7BC,EAAwBqB,OAAOrB,sBAC/BC,EAA2BoB,OAAOpB,yBAClCC,EAAiBmB,OAAOnB,eACxBC,EAAkBD,GAAkBA,EAAemB,QAEhD,SAASC,EAAqBC,EAAiBC,EAAiBC,MACpC,iBAApBD,EAA8B,IAEjCrB,EAAiB,KACbuB,EAAqBxB,EAAesB,GACpCE,GAAsBA,IAAuBvB,GAC7CmB,EAAqBC,EAAiBG,EAAoBD,OAI9DE,EAAO5B,EAAoByB,GAE3BxB,IACA2B,EAAOA,EAAKC,OAAO5B,EAAsBwB,SAGxC,IAAIK,EAAI,EAAGA,EAAIF,EAAKZ,SAAUc,EAAG,KAC9BC,EAAMH,EAAKE,QACVjC,EAAckC,IAASjC,EAAciC,IAAUL,GAAcA,EAAUK,IAAO,KAC3EC,EAAa9B,EAAyBuB,EAAiBM,OAEvDhC,EAAeyB,EAAiBO,EAAKC,GACvC,MAAOC,aAIVT,SAGJA,0DD1BK,SAACU,UAEjBC,gBAACC,eAAaC,cACX,SAAAzC,UACKsC,EAAMtC,QAAUA,IAClBA,EAAQF,EAAqBE,EAArBF,CAA4BwC,EAAMtC,QAG1CuC,gBAACC,eAAaE,UAASC,MAAO3C,GAC3BsC,EAAMM,yBE3CD,SAACC,OACXC,EAAgBD,EAAUhC,aAAegC,EAAU1B,MAAQ,YAW7D4B,EAAYC,aAVH,SAACV,EAAOW,UAEjBV,gBAACC,eAAaC,cACX,SAAAzC,UACQuC,gBAACM,KAAU7C,MAAOA,EAAOiD,IAAKA,GAASX,eAQtDS,EAAUlC,yBAA2BiC,MAE9BnB,EAAqBoB,EAAWF"}